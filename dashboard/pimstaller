#!/bin/bash

# Pimoroni Product Setup Dashboard
# Provides a familiar GUI for choosing which product installer to run

PIM_VERSION=1

if [ $EUID -ne 0 ]; then
    USER_HOME=$(getent passwd $USER | cut -d: -f6)
else
    USER_HOME=$(getent passwd $SUDO_USER | cut -d: -f6)
fi
WORKING_DIR=$USER_HOME/Pimoroni
DESKTOP_FILE="$USER_HOME/Desktop/pimstaller.desktop"
DESKTOP_APP_FILE="/usr/share/applications/pimstaller.desktop"
DESKTOP_ICON="/usr/share/pixmaps/pimstaller.png"
DASHBOARD_SCRIPT="/usr/bin/pimstaller"

WT_HEIGHT=17
WT_WIDTH=$(tput cols)

# Borrowed from Raspi-Config! https://github.com/asb/raspi-config/blob/master/raspi-config
if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
    WT_WIDTH=80
fi
if [ "$WT_WIDTH" -gt 178 ]; then
    WT_WIDTH=120
fi

WT_MENU_HEIGHT=$(($WT_HEIGHT-8))

success () {
    echo "$(tput setaf 2)$1$(tput sgr0)"
}

warning () {
    echo "$(tput setaf 1)$1$(tput sgr0)"
}

pim_check_distro() {

    IS_RASPBIAN=`cat /etc/*-release | grep Raspbian`

    if [[ "" == $IS_RASPBIAN ]]; then
        warning "Warning!"
        echo "Please only run this script on Raspbian on your Raspberry Pi"
        exit 1;
    fi

}

imgur_upload() {
    # original imgur script by Bart Nagel <bart@tremby.net>
    # modified from version 4
    # Required: curl

    # API Key provided by Alan@imgur.com

    file="$1"

    apikey="b3625162d3418ac51a9ee805b1840452"

    # upload the image
    response=$(curl -F "key=$apikey" -H "Expect: " -F "image=@$file" \
    http://imgur.com/api/upload.xml 2>/dev/null)
    # the "Expect: " header is to get around a problem when using this through 
    # the Squid proxy. Not sure if it's a Squid bug or what.
    if [ $? -ne 0 ]; then
        echo "Upload failed" >&2
    elif [ $(echo $response | grep -c "<error_msg>") -gt 0 ]; then
        echo "Error message from imgur:" >&2
        echo $response | sed -r 's/.*<error_msg>(.*)<\/error_msg>.*/\1/' >&2
    fi

    # parse the response and output our stuff
    url=$(echo $response | sed -r 's/.*<original_image>(.*)<\/original_image>.*/\1/')
    deleteurl=$(echo $response | sed -r 's/.*<delete_page>(.*)<\/delete_page>.*/\1/')
    echo $url
    return 0
    #echo $url
    #echo "Delete page: $deleteurl" >&2

}

pim_msgbox() {
    whiptail --msgbox "$1" $WT_HEIGHT $(($WT_WIDTH-20))
}

pim_yesno() {
    whiptail --yesno "$1" $WT_HEIGHT $(($WT_WIDTH-20))
}

pim_about() {
    pim_msgbox "\
This handy tool will help you get started with Pimoroni products. Simply pick the add-on board you want to install software for from the list, hit select and we'll walk you through the install process in a few easy steps.

Enjoy

- The Pimoroni Crew\
"
}

pim_uninstall() {
    sudo rm $DASHBOARD_SCRIPT
    sudo rm $DESKTOP_ICON
    sudo rm $DESKTOP_FILE
    sudo rm $DESKTOP_APP_FILE
    pim_msgbox "Pimstaller uninstalled!"
}

pim_install() {
    if [ ! -f $DESKTOP_FILE ]; then
        if pim_yesno "Do you want to add Pimstaller to your desktop?"; then
            export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
            curl -sS get.pimoroni.com/pimoroni-dashboard.png >> $TMPDIR/pimstaller.png
            curl -sS get.pimoroni.com/pimstaller >> $TMPDIR/pimstaller
            sudo cp $TMPDIR/pimstaller.png $DESKTOP_ICON
            sudo cp $TMPDIR/pimstaller $DASHBOARD_SCRIPT
            sudo chmod +x $DASHBOARD_SCRIPT
            sudo gtk-update-icon-cache
            echo "\
[Desktop Entry]
Encoding=UTF-8
Name=Pimstaller
GenericName=Pimstaller
Comment=Manage software for Pimoroni products
TryExec=lxterminal
Exec=lxterminal --command $DASHBOARD_SCRIPT
Icon=$DESKTOP_ICON
Type=Application
Categories=Utility;\
" >> $TMPDIR/pimstaller.desktop

            sudo desktop-file-install $TMPDIR/pimstaller.desktop
            cp $DESKTOP_APP_FILE $DESKTOP_FILE
            rm -rf $TMPDIR

            rm -rf $TMPDIR
        fi
    fi
}

pim_update() {
    if pim_check_network && [ -f $DESKTOP_FILE ]; then
        if [[ $1 == 'noupdate' ]]; then
            return
        fi
        echo "Updating..."
        export TMPDIR=`mktemp -d /tmp/pimoroni.XXXXXX`
        curl -sS get.pimoroni.com/pimoroni-dashboard.png >> $TMPDIR/pimstaller.png
        curl -sS get.pimoroni.com/pimstaller >> $TMPDIR/pimstaller
        sudo cp $TMPDIR/pimstaller.png $DESKTOP_ICON
        sudo cp $TMPDIR/pimstaller $DASHBOARD_SCRIPT
        rm -rf $TMPDIR
        pimstaller noupdate
        exit 0
    fi
}

pim_menu() {
    FUNCTION=$(whiptail --title "Pimoroni Software Installer" --menu "Choose your add-on..." $WT_HEIGHT $(($WT_WIDTH-10)) $WT_MENU_HEIGHT \
    --cancel-button Quit \
    --ok-button Select \
    "01 Blinkt!" "Install software & examples" \
    "02 Display-o-Tron 3000/HAT" "Install software & examples" \
    "03 Drum HAT" "Install software & examples" \
    "04 Enviro pHAT" "Install software & examples" \
    "05 Explorer HAT/pHAT" "Install software & examples" \
    "06 ESP IoT pHAT" "Install software & examples" \
    "07 Micro Dot pHAT" "Install software & examples" \
    "08 pHAT DAC" "Install software & examples" \
    "09 Piano HAT" "Install software & examples" \
    "10 Pibrella" "Install software & examples" \
    "11 PiGlow" "Install software & examples" \
    "12 Scroll pHAT" "Install software & examples" \
    "13 Skywriter HAT" "Install software & examples" \
    "14 Unicorn HAT/pHAT" "Install software & examples" \
#    "99 Take Screenshot" "Useful to help solve a problem" \
    3>&1 1>&2 2>&3)

    RETURN=$?
    if [ $RETURN -eq 1 ]; then
        return 0
    elif [ $RETURN -eq 0 ]; then
        case "$FUNCTION" in
            01\ *) pim_net_install blinkt ;;
            02\ *) pim_net_install displayotron ;;
            03\ *) pim_net_install drumhat ;;
            04\ *) pim_net_install envirophat ;;
            05\ *) pim_net_install explorerhat ;;
            06\ *) pim_net_install iotphat ;;
            07\ *) pim_net_install microdotphat ;;
            08\ *) pim_net_install phatdac ;;
            09\ *) pim_net_install pianohat ;;
            10\ *) pim_net_install pibrella ;;
            11\ *) pim_net_install piglow ;;
            12\ *) pim_net_install scrollphat ;;
            13\ *) pim_net_install skywriter ;;
            14\ *) pim_net_install unicornhat ;;
#            99\ *) pim_screenshot ;;
            *) pim_msgbox "Error: unrecognized option";;
        esac ||pim_msgbox "There was an error running option $FUNCTION"
    fi
}

pim_check_network() {
    sudo ping -q -w 1 -c 1 `ip r | grep default | cut -d ' ' -f 3` > /dev/null && return 0 || return 1
}

# Runs the relevant net install script and then returns to the menu
pim_net_install() {
    pim_check_network || (pim_msgbox "You don't appear to be connected to the internet, please check your connection and try again!" && exit 1)

    \curl -sS get.pimoroni.com/$1 | bash

    read -p "Press [Enter] key to continue..." < /dev/tty

    pim_menu
}

apt_pkg_req () {
    APT_CHK=$(dpkg-query -W --showformat='${Status}\n' $1|grep "install ok installed")
    if [ "" == "$APT_CHK" ]; then
        true
    else
        false
    fi
}

pim_screenshot() {

    if apt_pkg_req "scrot"; then
        sudo apt-get --force-yes --yes install scrot
    fi
    pim_msgbox "Please hit enter and then select the area you would like to screenshot by drawing a rectangle with your mouse.\n\nMake sure to move this window out of the way first!\n\nWarning!\nThis screenshot will be uploaded to imgur so you can share it with us, make sure it's not showing anything sensitive!"
    echo "Taking screenshot..."
    echo "Draw a rectangle around your subject."
    export PIMCWD=$(pwd)
    cd /tmp
    export IMGNAME=`scrot '%Y-%m-%d-pimoroni-help.png' -s -e 'echo $f'`
    export IMGURL=$(imgur_upload $IMGNAME)
    #rm $IMGNAME
    cd $PIMCWD
    pim_msgbox "Okay, your screenshot has been uploaded to:\n\n$IMGURL\n\nInclude this URL in your support query, and we'll be able to better identify your problem!\n\nYou can also find it in /tmp/$IMGNAME"
}

pim_check_distro

[ -d $WORKING_DIR ] || mkdir $WORKING_DIR
cd $WORKING_DIR

if [[ $1 == 'uninstall' ]]; then
    pim_uninstall
else
    pim_update $1
    pim_about # Display Splash
    pim_menu  # Display Menu
    pim_install
fi
